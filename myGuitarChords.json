'use strict';
// This code sample shows how to call and receive external rest service data, within your skill Lambda code.

// var AWS = require('aws-sdk');
var https = require('https');

exports.handler = function( event, context ) {
    var say = "";

    var shouldEndSession = false;
    var sessionAttributes = {};
    var chord = "";
    
    var dataset =
        [
            {"Name":"C", "file":"},
            {"Name":"G","file":},
            {"Name":"A Minor", "file":},
            {"Name":"F,","file":}
        ];

    if (event.session.attributes) {
        sessionAttributes = event.session.attributes;
    }

    if (event.request.type === "LaunchRequest") {
        say = "Welcome to guitar chords!  Ask me to play a chord.";
        context.succeed({sessionAttributes: sessionAttributes, response: buildSpeechletResponse(say, shouldEndSession) });

    } else {
        var IntentName = event.request.intent.name;

        if (IntentName === "GuitarChordIntent") {

            if (event.request.intent.slots.TYPES_OF_CHORDS.value) {

                chord = event.request.intent.slots.TYPES_OF_CHORDS.value;
                

                            say = "The population of " + myState + " is " + pop;

                            // add the state to a session.attributes array
                            if (!sessionAttributes.requestList) {
                                sessionAttributes.requestList = [];
                            }
                            sessionAttributes.requestList.push(myState);

                            // This line concludes the lambda call.  Move this line to within any asynchronous callbacks that return and use data.
                            context.succeed({sessionAttributes: sessionAttributes, response: buildSpeechletResponse(say, shouldEndSession) });

                        });
                      });
                post_req.write(JSON.stringify(post_data));
                post_req.end();

            }

        } else if (IntentName === "AMAZON.StopIntent" || IntentName === "AMAZON.CancelIntent") {
            say = "Goodbye!";
            shouldEndSession = true;
            context.succeed({sessionAttributes: sessionAttributes, response: buildSpeechletResponse(say, shouldEndSession) });


        } else if (IntentName === "AMAZON.HelpIntent" ) {
            say = "Say the name of a guitar chord, such as C or E minor, and I'll play it."
            context.succeed({sessionAttributes: sessionAttributes, response: buildSpeechletResponse(say, shouldEndSession) });

        }
    }
};

function buildSpeechletResponse(say, shouldEndSession) {
    return {
        outputSpeech: {
            type: "SSML",
            ssml: ___
        },
        reprompt: {
            outputSpeech: {
                type: "SSML",
                ssml: "<speak>Please try again. " + say + "</speak>"
            }
        },
        card: {
            type: "Simple",
            title: "My Card Title",
            content: "My Card Content, displayed on the Alexa App or alexa.amazon.com"
        },
        shouldEndSession: shouldEndSession
    };
}
